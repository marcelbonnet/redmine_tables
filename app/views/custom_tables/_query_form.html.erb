<% unless @custom_entity %>
    <%= form_tag(custom_table_path(@custom_table), method: :get, id: 'query_form') do %>
        <%= hidden_field_tag 'custom_table_id', @custom_table.id %>
        <%= render partial: 'query_headers' %>
    <% end %>
<% end %>
<%= form_tag({}, data: {cm_url: context_menu_custom_entities_path}) do -%>
    <%= hidden_field_tag 'back_url', url_for(params.permit!) %>
    <div class="autoscroll">
      <table class="list time-entries">
        <thead>
        <tr>
          <th class="checkbox hide-when-print">
            <%= check_box_tag 'check_all', '', false, class: 'toggle-selection',
                              :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}" %>
          </th>
          <% query.inline_columns.each do |column| %>
              <%= column_header(query, column) %>
          <% end %>
          <th></th>
        </tr>
        </thead>
        <tbody>

        <% unless @custom_entity %>
            <%= render_query_totals(@query) %>
        <% end %>
        <% grouped_query_results(entities, query) do |entity, group_name, group_count, group_totals| -%>
            <% if group_name %>
                <% reset_cycle %>
                <tr class="group open">
                  <td colspan="<%= query.inline_columns.size + 1 %>">
                    <span class="expander" onclick="toggleRowGroup(this);">&nbsp;</span>
                    <span class="name"><%= group_name %></span> <span class="count"><%= group_count %></span> <span class="totals"><%= group_totals %></span>
                    <%= link_to_function("#{l(:button_collapse_all)}/#{l(:button_expand_all)}",
                                         "toggleAllRowGroups(this)", :class => 'toggle-all') %>
                  </td>
                </tr>
            <% end %>

            <tr class="custom-entity-<%= cycle("odd", "even") %> hascontextmenu">
              <td class="checkbox hide-when-print"><%= check_box_tag("ids[]", entity.id, false, id: nil) %></td>
                <%= raw query.inline_columns.map {|column| 
                    "<td class=\"#{column.css_classes}\">#{allowed_column_content(column, entity)}</td>"}.join 
                %>
              <td class="buttons">
                    <%= link_to l(:button_show), custom_entity_path(entity), title: l(:button_show), class: 'icon-only icon-magnifier' %>
                    
                    <% if is_user_allowed_to_row?([:edit_table_row], entity) %>
                    <%= link_to l(:button_edit), edit_custom_entity_path(entity, edit_query: true, back_url: back_url), remote: true, title: admin_l(:button_edit, :admin_button_edit, entity), class: 'icon-only '<< admin_icon('icon-edit', entity) %>
                    <% end %>

                    <% if is_user_allowed_to_row?([:delete_table_row], entity) %>
                    <%= link_to l(:button_delete), custom_entity_path(entity, custom_table_id: @custom_table, project_id: params[:project_id], back_url: back_url), data: {confirm: admin_l(:text_are_you_sure, :admin_text_are_you_sure, entity)}, method: :delete, title: admin_l(:button_delete, :admin_button_delete, entity), class: 'icon-only '<< admin_icon('icon-del', entity) %>
                    <% end %>
              </td>
            </tr>
        <% end %>
        </tbody>
      </table>
    </div>
<% end %>
<% if @custom_entities %>
    <span class="pagination"><%= pagination_links_full @entity_pages, @entity_count %></span>
<% end %>

<%= call_hook(:view_custom_tables_query_bottom)%>

<%= context_menu %>